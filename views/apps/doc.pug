extends ../layout
block content
  style. 
    .rich-text {
      font-size: 1.5rem;
      line-height: 1.5;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: flex-start;
      padding: 1rem;
    }

    .rich-pages {
      width: 100%;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: flex-start;
      padding: 1rem;
    }

    .rich-content {
      padding: 2cm 2cm 2cm 2cm;
      margin: 0;
      border: 1px solid #ccc;
      border-radius: 5px;
      width: 804px;
      height: 1241px;
      min-width: 804px;
      min-height: 1241px;
      max-width: 804px;
      max-height: 1241px;
      overflow: hidden;
      background-color: #fff;
      border: 1px solid #ccc;
      margin: 0 auto;
      font: 500 12px Arial;
      overflow: auto;
      color: black;
    }

    .rich-content * {
      background-color: inherit;
    }

    .rich-text-menu {
      display: flex;
      flex-direction: row;
      justify-content: center;
      align-items: center;
    }

    .rich-text-menu input[type="color"]{
      width: 160px !important;
      height: 60px !important;
      border: none !important;
      cursor: pointer !important;
    }

    .rich-active {
      background-color: #ccc !important;
      color: #000 !important;
    }

    .rich-page-text {
      width: 100%;
      height: fit-content;
      background-color: red;
    }

    #doc, #user {
      display: none;
    }



  
  div 
    a(href="/docs") Ver meus documentos
    h3.text-center Crie & edite textos

    textarea#doc(style="display: null;") #{JSON.stringify(doc, null, 2)}
    textarea#user(style="display: null;") #{JSON.stringify(user, null, 2)}

    input#document-title(value=doc.title, type="text", placeholder="TÃ­tulo do documento", style="width: 100%; padding: 1rem; font-size: 1.5rem; border: 1px solid #ccc; border-radius: 5px; margin-bottom: 1rem;")
    .rich-text#class-content(data-rich-text="rich-text-1")
    
  script. 
    const docs = JSON.parse(document.querySelector('#doc').value);
    const me = JSON.parse(document.querySelector('#user').value);
    const title = document.querySelector('#document-title');

    setTimeout(() => {
      const datRich = document.querySelector('[data-rich-content]');
    
      if (datRich && docs) {
        datRich.innerHTML = docs.content;
    
        let interval = null;

        datRich.addEventListener('keydown', (e) => { 
          clearTimeout(interval);
          interval = setTimeout(() => {
              
            docs.content = e.target.innerHTML;
            docs.title = title.value;

            let msg = document.createElement('div');
            msg.style = 'position: fixed; padding: 8px; top: 20px; right: 20px; background-color: gray; color: black; border-radius: 20px; display: flex; justify-content: center; align-items: center; z-index: 99999';
            msg.innerHTML = '<h4 style="color: #fff;">Salvando...</h4>';
            document.body.appendChild(msg);
            setTimeout(() => msg.remove(), 3000);

            fetch('/docs/update', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify(docs)
            })
              .then(res => res.json())
              .then(data => { {
                let msg = document.createElement('div');
                
                if (data.status === 'success'){
                  msg.style = 'position: fixed; padding: 8px; top: 20px; right: 20px; background-color: green; color: white; border-radius: 20px; display: flex; justify-content: center; align-items: center; z-index: 99999';
                  msg.innerHTML = '<h4 style="color: #fff;"><i class="fas fa-check-circle"></i> Salvo com sucesso!</h4>';

                } else {
                  msg.style = 'position: fixed; padding: 8px; top: 20px; right: 20px; background-color: red; color: white; border-radius: 20px; display: flex; justify-content: center; align-items: center; z-index: 99999';
                  msg.innerHTML = '<h4 style="color: #fff;"><i class="fas fa-times-circle"></i> Erro ao salvar!</h4>';
                }
                
                document.body.appendChild(msg);
                setTimeout(() => msg.remove(), 3000);
              }});
          }, 3000);
        });
      }
    }, 1000);

    let timer = null;

    title.addEventListener('keyup', (e) => {
      docs.title = e.target.value;
      clearTimeout(timer);
      timer = setTimeout(() => {
        fetch('/docs/update', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(docs)
        })
          .then(res => res.json())
          .then(data => { {
        let msg = document.createElement('div');
          
        if (data.status === 'success'){
          msg.style = 'position: fixed; padding: 8px; top: 80px; right: 20px; background-color: green; color: white; border-radius: 20px; display: flex; justify-content: center; align-items: center; z-index: 99999';
          msg.innerHTML = '<h4 style="color: #fff;"> <i class="fas fa-check-circle"></i> Salvo com sucesso!</h4>';

        } else {
          msg.style = 'position: fixed; padding: 8px; top: 80px; right: 20px; background-color: red; color: white; border-radius: 20px; display: flex; justify-content: center; align-items: center; z-index: 99999';
          msg.innerHTML = '<h4 style="color: #fff;"> <i class="fas fa-times-circle"></i> Erro ao salvar!</h4>';
        }
          
        document.body.appendChild(msg);
        setTimeout(() => msg.remove(), 3000);
      }});
    }, 3000);
    });